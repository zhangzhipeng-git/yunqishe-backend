server:
    port: 8080
    servlet:
      session:
        # 设置两小时后超时
        timeout: PT2H
    error:
      whitelabel:
        enabled: false
      path: /error/myerror
spring:
    datasource:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        username: root
        password: root
        url: jdbc:mysql://localhost:3306/zx_yqs?useUnicode=true&useSSL=false&serverTimezone=UTC&allowMultiQueries=true&rewriteBatchedStatements=true
        # 配置获取连接等待超时的时间
        # 下面为连接池的补充设置，应用到上面所有数据源中
        # 初始化大小，最小，最大
        initialSize: 1
        minIdle: 3
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 30000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        useGlobalDataSourceStat: true
    # 热更新devtools配置
    devtools:
        restart:
          enabled: true  #设置开启热部署
          additional-paths: src/main/java/** #重启目录
          exclude: WEB-INF/**

mybatis:
    mapper-locations: classpath:mapper/*Mapper.xml
    # rmapper.xml文件中resultMap的type或者parameterType或者resultType会使用程序里定义的pojo的包名
    type-aliases-package: com.zx.yunqishe.entity
    configuration:
      # 下划线转驼峰
      map-underscore-to-camel-case: true
      # 打印sql
      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
      # 开启二级缓存
      cache-enabled: true
# 日志logback
logging:
    config: classpath:logback-spring.xml

